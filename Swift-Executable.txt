
//Modules:

import Foundation



//Variables:

var player_count: String?
player_count = ""

var word: String?
word = ""

var easyorhard: String?
easyorhard = ""

var user_guesses = [] as NSArray

var templetter: String?
templetter = ""

var testcaseBlanks: Int
testcaseBlanks = 0
//Word Banks:

let easy_word_bank = ["acres", "adult", "advice", "arrangement", "attempt", "august", "autumn", "border", "breeze", "brick", "calm", "canal", "cast", "chose", "claws", "coach", "constantly", "contrast", "cookies", "customs", "damage", "Danny", "deeply", "depth", "discussion", "doll", "donkey", "Egypt", "Ellen", "essential", "exchange", "exist", "explanation", "facing", "film", "finest", "fireplace", "floating", "fort", "garage", "grabbed", "grandmother", "habit", "happily", "Harry", "heading", "hunter", "Illinois", "image", "independent", "instant", "January", "kids", "label", "Lee", "lungs", "manufacturing", "Martin", "mathematics", "melted", "memory", "mill", "mission", "monkey", "Mount", "mysterious", "neighborhood", "Norway", "nuts", "occasionally", "official", "ourselves", "palace", "Pennsylvania", "Philadelphia", "plates", "poetry", "policeman", "positive", "possibly", "practical", "pride", "promised", "recall", "relationship", "remarkable, require, rhyme, rocky, rubbed, rush, sale, satellites, satisfied, scared, selection", "shake", "shaking", "shallow", "shout", "silly", "simplest", "slight", "slip", "slope", "soap", "solar", "species", "spin", "stiff", "swung", "tales", "thumb", "tobacco", "toy", "trap", "treated", "tune", "University", "vapor", "vessels", "wealth", "wolf", "zoo"]



let hard_word_bank = ["akward", "bagpipes", "banjo", "bunglar", "croquet", "crypt", "dwarves", "fervid", "fishhook", "fjord", "gazebo", "gypsy", "haiku", "haphazard", "hyphen", "ivory", "jazzy", "jiffy", "jinx", "jukebox", "kayak", "kiosk", "klutz", "memento", "mystify", "numbskull", "ostracize", "oxygen", "pajama", "phlegm", "pixel", "polka", "quad", "quip", "rhythmic", "rogue", "sphinx", "squawk", "swivel", "toady", "twelfth", "unzip", "waxy", "wildebeest", "yacht", "zealous", "zigzag", "zippy", "zombie"]



//Functions:

func spell_check_pco(){

  if (player_count != "1" && player_count != "2"){

    print("Make sure to type either 1 or 2! Type here: ")

    player_count = readLine()

    spell_check_pco()

  }

}



func easyorhard_spellcheck() {

    if ((easyorhard != "easy") && (easyorhard != "hard")) {

      print("Double check your spelling and try again. Apostrophes aren't needed. Type here: ")

      easyorhard = readLine()

      easyorhard_spellcheck()

    }

}

func print_blanks() {
  for letters in word! {
    testcaseBlanks = 0
    if letters == " " {
      print(" ", terminator: " ")
    }else{   //Debug Below
    templetter = String(letters)
    for guesses in user_guesses {
      if guesses as? String == templetter {
        print(guesses)
        testcaseBlanks = 1
      }
    
    }
    if testcaseBlanks == 0 {
      print("_", terminator: " ")
    }
  }
    
  }
}



//Algorithm:

print("How many players?")

player_count = readLine()

spell_check_pco()



if player_count == "2" {

  print("Okay, let's begin!")

  print("Player one, type your word or phrase here: ")

  word = readLine()

  var i = 1

  while i < 100 {

    print(" ")

    i += 1

  }
}



if player_count == "1" {

  print("Would you like an easy or hard word? Type 'easy' or 'hard': ")

  easyorhard = readLine()

  easyorhard_spellcheck()

  if easyorhard == "easy" {

    print("OK! Let's begin!")

    word = easy_word_bank[Int.random(in: 0 ..< easy_word_bank.count)]

  }



  if easyorhard == "hard" {

    print("OK! Let's begin!")

    word = hard_word_bank[Int.random(in: 0 ..< hard_word_bank.count)]
    print_blanks()
  }

}

print_blanks()
